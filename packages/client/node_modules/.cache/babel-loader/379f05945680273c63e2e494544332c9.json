{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aristofanischionis/Desktop/University/Winter semester/\\u0395\\u0391\\u039C/ergasia 3/ministry-of-labor-and-social-affairs/packages/client/src/components/SearchBar/index.js\",\n    _s = $RefreshSig$();\n\nimport _ from 'lodash'; // import faker from 'faker'\n\nimport React from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'; // const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: ''\n};\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState;\n\n    case 'START_SEARCH':\n      return { ...state,\n        loading: true,\n        value: action.query\n      };\n\n    case 'FINISH_SEARCH':\n      return { ...state,\n        loading: false,\n        results: action.results\n      };\n\n    case 'UPDATE_SELECTION':\n      return { ...state,\n        value: action.selection\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction SearchExampleStandard() {\n  _s();\n\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState);\n  const {\n    loading,\n    results,\n    value\n  } = state;\n  const timeoutRef = React.useRef();\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n\n      const isMatch = result => re.test(result.title); // dispatch({\n      //   type: 'FINISH_SEARCH',\n      //   results: _.filter(source, isMatch),\n      // })\n\n    }, 300);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 6,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        loading: loading,\n        onResultSelect: (e, data) => dispatch({\n          type: 'UPDATE_SELECTION',\n          selection: data.result.title\n        }),\n        onSearchChange: handleSearchChange,\n        results: results,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 10,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflowX: 'auto'\n          },\n          children: JSON.stringify({\n            loading,\n            results,\n            value\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflowX: 'auto'\n          },\n          children: JSON.stringify(source, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchExampleStandard, \"eyK34sYtN/wGlobeW5QOJcopodM=\");\n\n_c = SearchExampleStandard;\nexport default SearchExampleStandard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchExampleStandard\");","map":{"version":3,"sources":["/Users/aristofanischionis/Desktop/University/Winter semester/ΕΑΜ/ergasia 3/ministry-of-labor-and-social-affairs/packages/client/src/components/SearchBar/index.js"],"names":["_","React","Search","Grid","Header","Segment","initialState","loading","results","value","exampleReducer","state","action","type","query","selection","Error","SearchExampleStandard","dispatch","useReducer","timeoutRef","useRef","handleSearchChange","useCallback","e","data","clearTimeout","current","setTimeout","length","re","RegExp","escapeRegExp","isMatch","result","test","title","useEffect","overflowX","JSON","stringify","source"],"mappings":"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","sourcesContent":["import _ from 'lodash'\n// import faker from 'faker'\nimport React from 'react'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\n\n// const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\nfunction SearchExampleStandard() {\n    const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n    const { loading, results, value } = state\n  \n    const timeoutRef = React.useRef()\n    const handleSearchChange = React.useCallback((e, data) => {\n      clearTimeout(timeoutRef.current)\n      dispatch({ type: 'START_SEARCH', query: data.value })\n  \n      timeoutRef.current = setTimeout(() => {\n        if (data.value.length === 0) {\n          dispatch({ type: 'CLEAN_QUERY' })\n          return\n        }\n  \n        const re = new RegExp(_.escapeRegExp(data.value), 'i')\n        const isMatch = (result) => re.test(result.title)\n  \n        // dispatch({\n        //   type: 'FINISH_SEARCH',\n        //   results: _.filter(source, isMatch),\n        // })\n      }, 300)\n    }, [])\n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timeoutRef.current)\n      }\n    }, [])\n  \n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={loading}\n            onResultSelect={(e, data) =>\n              dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n            }\n            onSearchChange={handleSearchChange}\n            results={results}\n            value={value}\n          />\n    </Grid.Column>\n        \n      <Grid.Column width={10}>\n        <Segment>\n          <Header>State</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify({ loading, results, value }, null, 2)}\n          </pre>\n          <Header>Options</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify(source, null, 2)}\n          </pre>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SearchExampleStandard"]},"metadata":{},"sourceType":"module"}